name: 'Linux Release Builds'
on:
  workflow_call:
    inputs:
      do_package:
        required: false
        type: boolean
        default: false
      do_package_symbols:
        required: false
        type: boolean
        default: false
      retention_days:
        required: false
        type: number
        default: 14
      run_build:
        required: true
        type: boolean

jobs:
  ci-testing:
    name: Linux Build
    environment: public-github-runners
    runs-on: ubuntu-22.04
    if: inputs.run_build == true
    steps:

      - name: checkout sil-kit workflows and actions
        uses: actions/checkout@v4
        with:
          submodules: false
          sparse-checkout: |
            .github

      - name: setup build environment
        uses: ./.github/actions/sil-kit-ci/setup
        id: setup
        with:
          preset-name: linux-release

      - name: cmake configure
        uses: ./.github/actions/sil-kit-ci/cmake-configure
        id: cmake-configure
        with:
          preset-name: linux-release
          linux-docker-image: ${{ steps.setup.outputs.linux-docker-image }}
          cmake-source-directory: ${{ steps.setup.outputs.cmake-source-directory }}
          cmake-build-directory: ${{ steps.setup.outputs.cmake-build-directory }}
          cmake-package-directory: ${{ steps.setup.outputs.cmake-package-directory }}

      - name: cmake build
        uses: ./.github/actions/sil-kit-ci/cmake-build
        id: cmake-build
        with:
          preset-name: linux-release
          linux-docker-image: ${{ steps.setup.outputs.linux-docker-image }}
          cmake-source-directory: ${{ steps.setup.outputs.cmake-source-directory }}
          cmake-build-directory: ${{ steps.setup.outputs.cmake-build-directory }}
          cmake-package-directory: ${{ steps.setup.outputs.cmake-package-directory }}

      - name: cmake test
        uses: ./.github/actions/sil-kit-ci/cmake-test
        id: cmake-test
        with:
          preset-name: linux-release
          linux-docker-image: ${{ steps.setup.outputs.linux-docker-image }}
          cmake-source-directory: ${{ steps.setup.outputs.cmake-source-directory }}
          cmake-build-directory: ${{ steps.setup.outputs.cmake-build-directory }}
          cmake-package-directory: ${{ steps.setup.outputs.cmake-package-directory }}

      - name: cmake package
        uses: ./.github/actions/sil-kit-ci/cmake-package
        id: cmake-package
        with:
          preset-name: linux-release
          linux-docker-image: ${{ steps.setup.outputs.linux-docker-image }}
          cmake-source-directory: ${{ steps.setup.outputs.cmake-source-directory }}
          cmake-build-directory: ${{ steps.setup.outputs.cmake-build-directory }}
          cmake-package-directory: ${{ steps.setup.outputs.cmake-package-directory }}

#      - name: pull docker container
#        run: docker pull ghcr.io/mariusbgm/sil-kit-ci-ubuntu-22.04:main

#  clang14-release:
#    name: Clang 14 release Builds for Ubuntu 22.04
#    environment: public-github-runners
#    runs-on: ubuntu-22.04
#    if: inputs.run_build == true
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: true
#      - uses: ./.github/actions/build-cmake-preset
#        with:
#          preset-name: clang14-release
#          do-package: ${{ inputs.do_package }}
#          retention-days: ${{ inputs.retention_days }}
#
#  gcc-release:
#    name: GCC release Builds for Ubuntu 22.04
#    environment: public-github-runners
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/mariusbgm/sil-kit-ci-ubuntu-22.04:main
#    if: inputs.run_build == true
#    steps:
#      - name: git checkout
#        uses: actions/checkout@v1
#        with:
#          submodules: true
#      - name: GCC release build
#        uses: ./.github/actions/build-cmake-preset
#        id: build
#        with:
#          preset-name: linux-release
#          do-package: ${{ inputs.do_package }}
#          retention-days: ${{ env.retention_days }}

