name: "CI for Pull Requests"

on:
  pull_request:
    branches: [ 'main', 'ci/staging' ]

  push:
    branches: [ 'main', 'ci/staging' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check-licenses:
    name: License checks for SIL Kit sources
    runs-on: ubuntu-22.04
    steps:

      - name: Always OK
        id: license-check
        run: true

      #- uses: actions/checkout@v4
      #  with:
      #    submodules: false
      #- name: Install Dependencies
      #  id: dep-install
      #  run: |
      #    sudo apt install licensecheck

      #- name: Check Licenses
      #  id: license-check
      #  run: |
      #    sh ./SilKit/ci/check_licenses.sh
      #  shell: bash

  check-run-builds:
    runs-on: ubuntu-22.04
    outputs:
      run_builds: ${{ steps.build_check.outputs.run_builds }}
    steps:
      #- uses: actions/checkout@v4
      #  with:
      #    submodules: false

      - name: Always OK
        id: build_check
        run: echo "run_builds=true" >> $GITHUB_OUTPUT

      #- name: Check if build CI should run
      #  id: build_check
      #  run: |
      #    if [[ ${{ github.event_name }} == 'push' ]];then \
      #      echo "run_builds=true" >> $GITHUB_OUTPUT; \
      #    else \
      #      python3 ./SilKit/ci/check_files_changed.py ${{ github.repository }} ${{ github.event.number }}; \
      #    fi

  #clang14-tsan:
  #  name: Thread Sanitizer Tests
  #  needs: [check-licenses, check-run-builds]
  #  uses: ./.github/workflows/linux-tsan.yml
  #  with:
  #    run_build: ${{ needs.check-run-builds.outputs.run_builds == 'true' }}

  #clang14-ubsan:
  #  name: Undefined Behavior Sanitizer Tests
  #  needs: [check-licenses, check-run-builds]
  #  uses: ./.github/workflows/linux-ubsan.yml
  #  with:
  #    run_build: ${{ needs.check-run-builds.outputs.run_builds == 'true' }}

  #clang14-asan:
  #  name: Address Sanitizer Tests
  #  needs: [check-licenses, check-run-builds]
  #  uses: ./.github/workflows/linux-asan.yml
  #  with:
  #    run_build: ${{ needs.check-run-builds.outputs.run_builds == 'true' }}

  ci-build-packages:
    name: 'CI: Build Packages'
    uses: ./.github/workflows/ci-build-packages.yml
    needs: [ check-licenses, check-run-builds ]
    with:
      retention-days: ${{ github.event_name == 'push' && 2 || 1 }}
      run: ${{ needs.check-run-builds.outputs.run_builds == 'true' }}

  #windows-release-builds:
  #  uses: ./.github/workflows/build-win.yml
  #  needs: [check-licenses, check-run-builds]
  #  with:
  #    do_package: ${{ github.event_name == 'push' && true || false }}
  #    retention_days: ${{ github.event_name == 'push' && 90 || 14 }}
  #    run_build: ${{ needs.check-run-builds.outputs.run_builds == 'true' }}
