name: sil-kit-ci/setup

description: Setup the environment for the other CI actions.

inputs:

  linux-docker-image:
    default: ghcr.io/mariusbgm/sil-kit-ci-ubuntu-22.04:main
    description: Docker image used under Linux
    required: false

  msvc-arch:
    description: Target architecture used under Windows/MSVC
    required: true

  msvc-toolset:
    description: Target toolset used under Windows/MSVC
    required: true

  cmake-source-directory:
    description: The source directory for use by the cmake actions
    required: true

  cmake-build-directory:
    description: The build directory for use by the cmake actions
    required: true

  cmake-package-directory:
    description: The package directory for use by the cmake actions
    required: true

runs:
  using: composite
  steps:

    - name: (all) checkout sil-kit sources
      uses: actions/checkout@v4
      with:
        path: ${{ inputs.cmake-source-directory }}
        submodules: true

    - name: (linux) cleanup build and package directories
      if: runner.os == 'Linux'
      shell: bash
      run: |
        rm -rf "${{ inputs.cmake-build-directory }}"
        rm -rf "${{ inputs.cmake-package-directory }}"

    - name: (windows) cleanup build and package directories
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        if (Test-Path "${{ inputs.cmake-build-directory }}") { Remove-Item -Recurse -Force "${{ inputs.cmake-build-directory }}" }
        if (Test-Path "${{ inputs.cmake-package-directory }}") { Remove-Item -Recurse -Force "${{ inputs.cmake-package-directory }}" }

    - name: (linux) create build and package directories
      if: runner.os == 'Linux'
      shell: bash
      run: |
        mkdir -p "${{ inputs.cmake-build-directory }}"
        mkdir -p "${{ inputs.cmake-package-directory }}"

    - name: (windows) cleanup build and package directories
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $null = New-Item -ItemType Directory -Force "${{ inputs.cmake-build-directory }}"
        $null = New-Item -ItemType Directory -Force "${{ inputs.cmake-package-directory }}"

    - name: (linux) pull docker image for building via cmake
      if: runner.os == 'Linux'
      shell: bash
      run: docker pull "${{ inputs.linux-docker-image }}"

    - name: (windows) setup msvc environment
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1.12.0
      with:
        arch: ${{ inputs.msvc-arch }}
        toolset: ${{ inputs.msvc-toolset }}
